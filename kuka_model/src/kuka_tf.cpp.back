#include <ros/ros.h>
#include <tf/transform_broadcaster.h>


int main(int argc, char** argv) {
	ros::init(argc, argv, "kuka_tf");
	ros::NodeHandle node;
	ros::NodeHandle nh("~");

	// Parametro rate
	int rate;
	nh.param("rate", rate, 30);
	ros::Rate loop_rate(rate);
	ROS_INFO("KUKA tf para base en: %d Hz", rate);

	// Definir transformaci√≥n
	static tf::TransformBroadcaster br;
	tf::Transform transform;
	transform.setOrigin( tf::Vector3(0.0, 0.0, 0.0) );
	tf::Quaternion q;
	q.setRPY(0, 0, 0);
	transform.setRotation(q);


	while (ros::ok()) {
		// Publicar publicaciones para KUKA Real y KUKA Shadow en el mismo origen
		br.sendTransform(tf::StampedTransform(transform, ros::Time::now(), "world", "real/base"));
		br.sendTransform(tf::StampedTransform(transform, ros::Time::now(), "world", "shadow/base"));
		ros::spinOnce();
		loop_rate.sleep();
	}
	return 0;
};
